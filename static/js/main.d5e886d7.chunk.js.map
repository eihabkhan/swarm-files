{"version":3,"sources":["components/card/Card.component.jsx","components/card-list/CardList.component.jsx","components/search-box/SearchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","locust","id","alt","name","email","CardList","swarm","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchTerm","target","value","state","fetch","then","res","json","data","this","filteredSwarm","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oSAGaA,G,kBAAO,SAAAC,GAChB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,OAAOC,GAAvC,aAAsDC,IAAKL,EAAMG,OAAOG,OAChF,6BAAKN,EAAMG,OAAOG,OAClB,4BAAIN,EAAMG,OAAOI,aCJhBC,EAAW,SAAAR,GACpB,OACI,qBAAKC,UAAU,YAAf,SACMD,EAAMS,MAAMC,KAAI,SAAAP,GAAM,OAAI,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOC,UCJ7CO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OAAO,uBACHC,KAAK,SACLb,UAAU,SACVW,YAAaA,EACbG,SAAUF,MCuCHG,E,kDAvCb,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,WAAYF,EAAEG,OAAOC,SAbpC,EAAKC,MAAQ,CACXb,MAAO,GACPU,WAAY,IAJF,E,gEAQO,IAAD,OAClBI,MAAM,6CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GAAI,OAAI,EAAKT,SAAS,CAACT,MAAOkB,S,+BAQhC,IAAD,EACuBC,KAAKN,MAA3Bb,EADD,EACCA,MAAOU,EADR,EACQA,WACTU,EAAgBpB,EAAMqB,QAC1B,SAAA3B,GAAM,OAAIA,EAAOG,KAAKyB,cAAcC,SAASb,EAAWY,kBAG1D,OACE,sBAAK9B,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CAAWW,YAAY,eAAeC,aAAce,KAAKf,eACzD,cAAC,EAAD,CAAUJ,MAAOoB,W,GA9BPI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.d5e886d7.chunk.js","sourcesContent":["import React from 'react'\nimport './Card.styles.css'\n\nexport const Card = props => {\n    return (\n        <div className='card-container'>\n            <img src={`https://robohash.org/${props.locust.id}?set=set2`} alt={props.locust.name}/>\n            <h2>{props.locust.name}</h2>\n            <p>{props.locust.email}</p>\n        </div>\n    )\n}","import React from 'react'\nimport './CardList.styles.css'\nimport {Card} from '../card/Card.component'\n\nexport const CardList = props => {;\n    return (\n        <div className='card-list'>\n            { props.swarm.map(locust => <Card key={locust.id} locust={locust}/>)}\n        </div>\n    )\n}","import React from 'react'\nimport './SearchBox.styles.css'\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n    return <input \n        type='search' \n        className='search' \n        placeholder={placeholder}\n        onChange={handleChange}\n    />\n}\n\n","import React, { Component } from 'react'\n\nimport './App.css'\n\nimport { CardList } from './components/card-list/CardList.component'\nimport { SearchBox } from './components/search-box/SearchBox.component'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      swarm: [],\n      searchTerm: ''\n    } \n  }\n\n  componentDidMount() {\n    fetch('http://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n        .then(data => this.setState({swarm: data}))\n  }\n\n  handleChange = e => {\n    this.setState({searchTerm: e.target.value})\n  }\n  \n\n  render() {\n    const { swarm, searchTerm } = this.state\n    const filteredSwarm = swarm.filter(\n      locust => locust.name.toLowerCase().includes(searchTerm.toLowerCase()) \n    )\n\n    return (\n      <div className='App'>  \n        <h1> Swarm Files </h1>       \n        <SearchBox placeholder='Search swarm' handleChange={this.handleChange}/>\n        <CardList swarm={filteredSwarm}/>\n      </div>\n    )\n  }\n\n  \n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}